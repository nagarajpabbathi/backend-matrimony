Access Key ID:AKIAIFBROWSLNHDB7SSA
Secret Access Key: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
bucketname:my-backend-images


//Init gfs
// let gfs;
// //initialize stream
// conn.once('open', () => {
//     gfs = Grid(conn.db, mongoose.mongo);
//     gfs.collection('uploads');
// });

// // create storage engine
// const storage = new GridFsStorage({
//     url: mongoURI,
//     file: (req, file) => {
//         return new Promise((resolve, reject) => {
//             crypto.randomBytes(16, (err, buf) => {
//                 if (err) {
//                     return reject(err);
//                 }
//                 const filename = buf.toString('hex') + path.extname(file.originalname);
//                 const fileInfo = {
//                     filename: filename,
//                     bucketName: 'uploads'
//                 };
//                 resolve(fileInfo);
//             });
//         });
//     }
// });
// const upload = multer({ storage }).fields([
//     { name: 'file' },
//     {name:'file2'}
// ])


const storage = multer.memoryStorage({
    destination: function (req, files, callback) {
        callback(null,'')
    }


    const createBiodata = async (req, res, next) => {
    upload(req, res, async err => {
        if (err) {
            console.log(err)
        }
        else {
            
            const createdBiodata = new Biodata({
                name: req.body.name,
                surname: req.body.surname,
                gender: req.body.gender,
                dob: req.body.dob,
                tob: req.body.tob,
                height: req.body.height,
                qualify: req.body.qualify,
                jobDetails: req.body.job,
                jobType: req.body.jobtype,
                company: req.body.company,
                salary: req.body.salary,
                caste: req.body.caste,
                gothram: req.body.gothram,
                father: req.body.father,
                fatheroccu: req.body.fatheroccu,
                mother: req.body.mother,
                motheroccu: req.body.motheroccu,
                sibilings: req.body.sibilings,
                district: req.body.district,
                pincode: req.body.pincode,
                qualifyType: req.body.qualifyType,
                phone: req.body.phone,
                username: req.body.username,
                photo1: req.files.file[0].filename,
                photo2: 'none',
                search: "none"
            });
            var height = req.body.height
            if (height.length == 3) {
                height = height + '0'
            }
            var search = req.body.gender.substring(0, 1) +    //1
                req.body.qualifyType.substring(0, 3) +        //2-4
                req.body.caste.substring(0, 2) +              //5-6
                req.body.jobtype.substring(0, 1) +            //7
                req.body.dob.substring(2, 4) +                //8-9
                req.body.height.substring(0, 1) +
                req.body.height.substring(2, 4) +             //10-11-12
                req.body.surname.substring(0, 1) +            //13
                req.body.name.substring(0, 2);
            search = search.toLowerCase();            //14-15
            createdBiodata.search = search;
            if ((req.files.file2)) {
                createdBiodata.photo2 = req.files.file2[0].filename;
                const getuser = await user.findOne({ username: req.body.username });
                if (getuser) {
                    const update = { searchkey: search };
                    await getuser.updateOne(update);
                }
                const result = createdBiodata.save();
                res.json({ res: true, search: search })
            }
            else {
                const result = createdBiodata.save();
                const getuser = await user.findOne({ username: req.body.username });
                if (getuser) {
                    const update = { searchkey: search };
                    await getuser.updateOne(update);
                }

                res.json({ res: true, search: search })
            }
        }
    })
}